<!DOCTYPE html>
<html style="margin: 0px; width: 100%; height: 100%;">
<head>
  <title>Nässy Plotter</title>
  <meta charset="utf-8" />

  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script>
  <% include ../js/mapbox-gl.js %>
  <% include ../js/spin.min.js %>
  </script>

  <!-- Favicons start -->

  <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-57x57.png">
  <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon-60x60.png">
  <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-72x72.png">
  <link rel="apple-touch-icon" sizes="76x76" href="/apple-touch-icon-76x76.png">
  <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114x114.png">
  <link rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon-120x120.png">
  <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon" sizes="152x152" href="/apple-touch-icon-152x152.png">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon-180x180.png">
  <link rel="icon" type="image/png" href="/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="/android-chrome-192x192.png" sizes="192x192">
  <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="/favicon-16x16.png" sizes="16x16">
  <link rel="manifest" href="/manifest.json">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="msapplication-TileImage" content="/mstile-144x144.png">
  <meta name="theme-color" content="#ffffff">

  <!-- Favicons end -->

  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">


  <link href='stylesheets/mapbox-gl.css' rel='stylesheet' />
  <link href='stylesheets/addtohomescreen.css' rel='stylesheet' />
  <script src="js/addtohomescreen.js"></script>
  <script>
  addToHomescreen({
    modal: 1,
   skipFirstVisit: true,
   maxDisplayCount: 5,
   startDelay: 5
  });
  </script>
</head>
<body style="margin: 0px; width: 100%; height: 100%;">
  <div id="map" style="margin: 0px; width: 100%; height: 100%;"></div>

  <script>

  /* Spinner start */
  var opts = {
    lines: 13 // The number of lines to draw
  , length: 28 // The length of each line
  , width: 14 // The line thickness
  , radius: 42 // The radius of the inner circle
  , scale: 1 // Scales overall size of the spinner
  , corners: 1 // Corner roundness (0..1)
  , color: '#000' // #rgb or #rrggbb or array of colors
  , opacity: 0.25 // Opacity of the lines
  , rotate: 0 // The rotation offset
  , direction: 1 // 1: clockwise, -1: counterclockwise
  , speed: 1 // Rounds per second
  , trail: 60 // Afterglow percentage
  , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS
  , zIndex: 2e9 // The z-index (defaults to 2000000000)
  , className: 'spinner' // The CSS class to assign to the spinner
  , top: '50%' // Top position relative to parent
  , left: '50%' // Left position relative to parent
  , shadow: true // Whether to render a shadow
  , hwaccel: false // Whether to use hardware acceleration
  , position: 'absolute' // Element positioning
}

var target = document.getElementById('map')
var spinner = new Spinner(opts).spin(target);

/* Spinner end */

  var locationUpdateInterval = 3000;
  mapboxgl.accessToken = 'pk.eyJ1IjoibWlsa2FuZGNyZWFtIiwiYSI6ImNpb3dxcHZzazAwOWJ3OWtqNHNjdTgzNjMifQ.KK7QXbd-tSQzfH96p9rpPg';
  var map = new mapboxgl.Map({
      attributionControl : false,
      container: 'map',
      style: 'mapbox://styles/milkandcream/ciowqs054000uqmmald86hbka'
  });

  var pos = []

  function updateMarkerPosition( coordinates ) {
    map.getSource('boat').setData( {
                  "type": "Feature",
                  "geometry": {
                      "type": "Point",
                      "coordinates": coordinates
                  },
                  "properties": {
                      "title": "",
                      "marker-symbol": "ferry"
                  }
              } )
  }

  function updateLocation() {
    console.log( "update location" )

    navigator.geolocation.getCurrentPosition(function(position) {
      pos = [ position.coords.longitude, position.coords.latitude ];

      console.log(pos)

      // Update boat marker position on map:
      updateMarkerPosition( pos );
      spinner.stop();

    }, function() {
      handleLocationError(true);
    },
    {
      enableHighAccuracy: true
    });
  }
  

  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    console.log(browserHasGeolocation ?
                          'Error: The Geolocation service failed.' :
                          'Error: Your browser doesn\'t support geolocation.');
  }

  map.addControl(new mapboxgl.Navigation({position: 'bottom-right'}));
  var geoLocateControl = new mapboxgl.Geolocate({position: 'top-left'});
  geoLocateControl.on( 'geolocate' , function(data) { updateLocation( [ data.coords.longitude , data.coords.latitude ])})
  map.addControl( geoLocateControl );

  map.on('load', function () {

      map.addSource("boat", {
          "type": "geojson",
          "data": {
            "type": "Feature",
            "geometry": {
                "type": "Point",
                "coordinates": [23.783832999999998, 61.503015399999995]
            },
            "properties": {
                "title": "",
                "marker-symbol": "ferry"
            }
          }
      });

      map.addLayer({
          "id": "boat",
          "type": "symbol",
          "source": "boat",
          "layout": {
              "icon-image": "{marker-symbol}-15",
              "text-field": "{title}",
              "text-font": ["Open Sans Semibold", "Arial Unicode MS Bold"],
              "text-offset": [0, 0.6],
              "text-anchor": "top"
          }
      });

      // Try HTML5 geolocation.
      if (navigator.geolocation) {

        // Load initial location:
        updateLocation();

        // Set interval for updating marker position:
        window.setInterval(function() {
            
            updateLocation();

        }, locationUpdateInterval );

      } else {
        // Browser doesn't support Geolocation
        handleLocationError(false);
      }
  });

  </script>
</body>
</html>
